@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole("root"))
        {
            <li class="nav-item">
                <a id="admin" class="nav-link" title="Admin" asp-area="Admin" asp-page="/Index">
                    <i class="fas fa-user-secret mr-3"></i>Администрирование
                </a>
            </li>
        }
        <li class="nav-item">
            <a id="manage" class="nav-link" title="Manage" asp-area="Identity" asp-page="/Account/Manage/Index">@UserManager.GetUserName(User)</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button id="logout" type="submit" class="btn btn-elegant">
                    <i class="fas fa-power-off mr-1"></i>
                    Выход
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Регистрация</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Вход</a>
        </li>
    }
</ul>
