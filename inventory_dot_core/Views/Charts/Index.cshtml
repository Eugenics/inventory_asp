<!--
<script src="../../wwwroot/js/anycharts/anychart-base.min.js" type="text/javascript"></script>
<script src="~/js/anycharts/anychart-core.min.js"></script>
<script src="~/js/anycharts/anychart-pie.min.js"></script>
<script src="~/js/anycharts/anychart-exports.min.js"></script>
<script src="~/js/anycharts/anychart-ui.min.js"></script>
<script src="~/js/anycharts/anychart-cartesian.min.js"></script>
-->



<script src="~/Chart.js/Chart.min.js"></script>
<script src="~/Chart.js/utils.js"></script>

<!--

<script>
    anychart.onDocumentLoad(function () {
          // get data from server
        var data = @Html.Raw(ViewData["DataHardByMol"]);
                // create an instance of a pie chart
        var chart = anychart.pie(getRevenue(data, "MolEmp"));
        //set chart title
        chart.title("Hard By Mol");
        // set the container element
        chart.container("containerPie1");
        // initiate chart display
        chart.draw();
    });

    anychart.onDocumentLoad(function () {
                  // get data from server
        var data = @Html.Raw(ViewData["DataSoftByType"]);
                // create an instance of a pie chart
        var chart = anychart.pie(getRevenue(data, "Name"));

        chart.labels().position('outside');
        // set legend title settings
        chart.legend().title()
            .enabled(true)
            .text('Типы ПО')
            .padding([0, 0, 10, 0]);

        // set legend position and items layout
        chart.legend()
            .position('center-bottom')
            .itemsLayout('horizontal')
            .align('center');

        // set chart title
        chart.title("Распределение ПО по типам");
        // set the container element
        chart.container("containerPie2");
        // initiate chart display
        chart.draw();
    });

    anychart.onDocumentReady(function () {
        // create data set on our data
        var data = @Html.Raw(ViewData["DataHardSoftByRegion"]);
        var dataSet = anychart.data.set(data);

        // map data for the first series, take x from the zero column and value from the first column of data set
        var seriesData_1 = dataSet.mapAs({ 'x': 0, 'value': 1 });
    // map data for the second series, take x from the zero column and value from the second column of data set
    var seriesData_2 = dataSet.mapAs({'x': 0, 'value': 2});

    // create column chart
    var chart = anychart.column();
    // turn on chart animation
    chart.animation(true);
    // set chart title text settings
    chart.title('Hard&Soft in Regions');
    // temp variable to store series instance
    var series;
    // helper function to setup label settings for all series
    var setupSeries = function (series, name) {
        series.name(name);
        series.selected()
                .fill('#f48fb1 0.8')
                .stroke('1.5 #c2185b');
    };

    // create first series with mapped data
    series = chart.column(seriesData_1);
    series.xPointPosition(0.45);
    setupSeries(series, 'Hard');

    // create second series with mapped data
    series = chart.column(seriesData_2);
    series.xPointPosition(0.25);
    setupSeries(series, 'Soft');

    // set chart padding
    chart.barGroupsPadding(0.3);
    // format numbers in y axis label to match browser locale
    chart.yAxis().labels().format('{%Value}{groupsSeparator: }');
    // set titles for Y-axis
    chart.yAxis().title('Количество ТМЦ');

    // turn on legend
    chart.legend()
            .enabled(true)
            .fontSize(13)
            .padding([0, 0, 20, 0]);

    chart.interactivity().hoverMode('single');
    chart.tooltip().format('{%Value}{groupsSeparator: }');

    // set container id for the chart
    chart.container('container');
    // initiate chart drawing
    chart.draw();
});

    // calculate revenue add return data in appropriate format for charts
    function getRevenue(data, key) {
            var grouped = data.reduce(function(result, item) {
                result[item[key]] = result[item[key]] || 0;
                result[item[key]] += item.Total
                return result;
            }, {});

            return Object.keys(grouped).map(function(k) {
                return [k, grouped[k]];
            });
        };

</script>

-->


<body>
    <h2>DASHBOARD</h2>
    <div class="container">
        <div class="row">
            <div class="col">
                <canvas id="totalMcChart"></canvas>
            </div>
            <div class="col">
                <canvas id="totalSoftChart"></canvas>
            </div>
        </div>
        <hr />
        <div class="row">
            <canvas id="totalITMcChart"></canvas>
        </div>
        <hr />
    </div>



    <!--
        <div class="row">
            <div id="container" style="width: 1000px; height: 400px;"></div>
        </div>
        <div class="row">
            <div class="col-sm">
                <div id="containerPie1" style="width: 700px; height: 400px;"></div>
            </div>
            <div class="col-sm">
                <div id="containerPie2" style="width: 700px; height: 400px;"></div>
            </div>
        </div>
    -->
</body>

<script type="text/javascript">
    var hard_data = @Html.Raw(ViewData["DataHardSoftByRegion"]);

    var labels = [];
    var hard = [];
    var soft = [];
    var TotalHardInUse = [];
    var TotalITHard = [];


    hard_data.forEach(function(row) {
        labels.push(row["RegionName"]);
        hard.push(row["totalHard"]);
        soft.push(row["totalSoft"]);
        TotalHardInUse.push(row["TotalHardInUse"]);
        TotalITHard.push(row["TotalITHardCnt"]);
    });

    //console.log(labels);
    //console.log(hard);
    //console.log(soft);
    console.log(TotalHardInUse);
    console.log(TotalITHard);

    var color = Chart.helpers.color;

    var totalMCChart = document.getElementById('totalMcChart').getContext('2d');
    var MCChart = new Chart(totalMCChart, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                backgroundColor: color(window.chartColors.red).alpha(0.5).rgbString(),
                borderColor: window.chartColors.red,
			    borderWidth: 1,
                label: 'Всего МЦ по регионам:',
                data: hard
            }]
        },
        options: {}
    });


    var totalSoftChart = document.getElementById('totalSoftChart').getContext('2d');
    var SoftChart = new Chart(totalSoftChart, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [
                {
                    backgroundColor: color(window.chartColors.green).alpha(0.5).rgbString(),
                    borderColor: window.chartColors.green,
                    borderWidth: 1,
                    label: 'Всего SOFT по регионам:',
                    data: soft
                }]
        },
        options: {}
    });


    var totalITMcChart = document.getElementById('totalITMcChart').getContext('2d');
    var ITMcChart = new Chart(totalITMcChart, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [
                {
                    backgroundColor: color(window.chartColors.yellow).alpha(0.5).rgbString(),
                    borderColor: window.chartColors.yellow,
                    borderWidth: 1,
                    label: 'IT МЦ по регионам',
                    data: TotalITHard
                },
                {
                    backgroundColor: color(window.chartColors.purple).alpha(0.5).rgbString(),
                    borderColor: window.chartColors.purple,
                    borderWidth: 1,
                    label: 'IT МЦ по регионам (распределено по РМ)',
                    data: TotalHardInUse
                }]
        },
        options: {}
    });
</script>